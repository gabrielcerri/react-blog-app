{"version":3,"sources":["context/user.js","components/App.js","utils/sleep.js","services/auth.js","hooks/useAuth.js","hooks/useLocalStorage.js","components/Header.js","api/posts.js","components/Home.js","components/Profile.js","components/SignUp.jsx","components/SignIn.jsx","components/Footer.js","components/Layout.js","index.js"],"names":["UserContext","React","createContext","App","useState","user","setUser","Provider","value","path","SignIn","SignUp","exact","sleep","time","Promise","resolve","reject","setTimeout","doSignin","users","email","password","a","find","doSignup","setUsers","fieldsRequired","errors","Object","entries","forEach","element","key","isFieldReq","includes","error","push","length","useAuth","defaultValue","serialize","JSON","stringify","deserialize","parse","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","prevKey","current","removeItem","setItem","useLocalStorageState","signin","Auth","signup","Header","history","useHistory","useContext","console","log","name","firstName","lastName","minH","w","bg","direction","justify","align","p","cursor","color","variant","_active","borderColor","_focus","outline","onClick","size","icon","faHome","colorScheme","mr","src","getPosts","fetch","response","ok","Error","json","Home","loading","posts","useEffect","data","message","doFetchPosts","h","as","mb","map","post","m","border","borderRadius","title","body","id","Profile","setFirsName","setLastName","setEmail","setPassword","setErrors","isLoading","setIsLoading","backgroundColor","textAlign","onSubmit","e","preventDefault","then","catch","fontSize","fontWeight","onChange","target","placeholder","i","mt","type","disabled","padding","setError","isRequired","Footer","px","py","Layout","children","flex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26bee061.chunk.js","sourcesContent":["//lo usamos para manejar estados dentro de toda la app\n//ya que solamente manejamos estados dentro de cada componente\n//el useContext nos permite manejar ese estado dentro de toda la app\n//llamados estados globales\n//useContext nos permite crear diferentes espacios de información y guardar distintas variables en \"contextos\"\n\nimport React from \"react\";\n\nexport const UserContext = React.createContext(); //createContext nos crea un espacio donde vamos a poder almacenar información\n\n//UserContext tiene ahora dos partes:\n// un provider y un consumer\n// el provider va a ser el que va a distribuir la información\n// el consumer es el que la va a usar\n// el provider tiene que distribuir la información a todo lo que nosotros querramos que acceda\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Profile, SignIn, SignUp, Layout } from \"./\";\nimport { UserContext } from \"../context/user\";\n\nexport const App = () => {\n  const [user, setUser] = React.useState(null);\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route path=\"/signin\">\n              <SignIn />\n            </Route>\n            <Route path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route path=\"/profile\">\n              <>\n                <Profile />\n              </>\n            </Route>\n            <Route path=\"/\" exact>\n              <>\n                <Home />\n              </>\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </UserContext.Provider>\n  );\n};\n","//aca simulamos que la api estaba tardando\n//esto devuelve una promesa que después de 2seg\n//se resuelve\n//si no especificas el tiempo, por defecto es 2seg\nexport const sleep = (time = 2000) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\n//cualquier función relevante a cualquier componente va en utils\n//son funciones que nos ayudan para algo de manera en general que no tiene\n//un impacto en general en toda la app\n","import { sleep } from \"../utils/sleep\";\n\nexport const doSignin = async (users, email, password) => {\n  const storedUser = users.find((user) => user.email === email);\n\n  if (!storedUser) {\n    return Promise.reject(\"El usuario ingresado no existe\");\n  }\n\n  const user = users.find((user) => {\n    return user.email === email && user.password === password;\n  });\n\n  await sleep(1000);\n  if (!user) {\n    return Promise.reject(\"Contraseña inexistente\");\n  }\n  // si llega hasta aca, significa que la promesa se resuelve bien\n  // porque las funciones async (asíncronas) devuelven una promesa\n  return user;\n};\n\nexport const doSignup = async (users, setUsers, user) => {\n  // estos van a ser mis campos requeridos\n  // todo servicio de auth siempre va a tener\n  // ❗ campos requeridos ❗\n\n  const fieldsRequired = [\"email\", \"password\"];\n  const errors = [];\n\n  //vemos si estan completos los campos requeridos\n  //sino devuelvo un array con los errores\n\n  Object.entries(user).forEach((element) => {\n    const [key, value] = element;\n    const isFieldReq = fieldsRequired.includes(key);\n\n    if (!value && isFieldReq) {\n      const error = ` ${key} is required`;\n      errors.push(error);\n    }\n  });\n\n  if (errors.length > 0) {\n    await sleep(1000);\n    return Promise.reject(errors);\n  } else {\n    await sleep();\n    setUsers([...users, user]);\n  }\n};\n","import { useLocalStorageState } from \"../hooks/useLocalStorage\";\nimport * as Auth from \"../services/auth\";\n\n// aca simulamos lo que podría ser un servicio de autenticación\n// servicios como: AWS, Firebase, o un endpoint de nuestro backend\n\nexport const useAuth = () => {\n  const [users, setUsers] = useLocalStorageState(\"users\", []);\n  return {\n    signin: (email, password) => Auth.doSignin(users, email, password),\n    signup: (user) => Auth.doSignup(users, setUsers, user),\n  };\n};\n","import * as React from \"react\";\n\n/**\n *\n * @param {String} key The key to set in localStorage for this value\n * @param {Object} defaultValue The value to use if it is not already in localStorage\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\n */\n\nfunction useLocalStorageState(\n  key,\n  defaultValue = \"\",\n  { serialize = JSON.stringify, deserialize = JSON.parse } = {}\n) {\n  const [state, setState] = React.useState(() => {\n    const valueInLocalStorage = window.localStorage.getItem(key);\n    if (valueInLocalStorage) {\n      return deserialize(valueInLocalStorage);\n    }\n    return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n  });\n\n  const prevKeyRef = React.useRef(key);\n\n  React.useEffect(() => {\n    const prevKey = prevKeyRef.current;\n    if (prevKey !== key) {\n      window.localStorage.removeItem(prevKey);\n    }\n    prevKeyRef.current = key;\n    window.localStorage.setItem(key, serialize(state));\n  }, [key, state, serialize]);\n\n  return [state, setState];\n}\n\nexport { useLocalStorageState };\n","import React from \"react\";\nimport { Flex, Button, Avatar, Text } from \"@chakra-ui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../context/user\";\nimport { useAuth } from \"../hooks\";\n\nexport const Header = () => {\n  const history = useHistory();\n  const { user } = React.useContext(UserContext);\n  const { users } = useAuth();\n  console.log(`users header: ${JSON.stringify(users, null, 2)}`);\n\n  const name = user && `${user.firstName} ${user.lastName}`;\n\n  const handleNavigateHome = () => {\n    history.push(\"/\");\n  };\n  const handleNavigateProfile = () => {\n    history.push(\"/profile\");\n  };\n  return (\n    <Flex\n      minH=\"5rem\"\n      w=\"full\"\n      bg=\"black\"\n      direction=\"row\"\n      justify=\"space-between\"\n      align=\"center\"\n      p=\"1rem 3rem\"\n    >\n      <Button\n        cursor=\"pointer\"\n        color=\"white\"\n        variant=\"ghost\"\n        _active={{\n          bg: \"#0000\",\n          borderColor: \"none\",\n        }}\n        _focus={{\n          outline: \"none\",\n        }}\n        onClick={handleNavigateHome}\n      >\n        <FontAwesomeIcon size=\"2x\" icon={faHome} />\n      </Button>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Flex direction=\"row\">\n            <Button\n              colorScheme=\"teal\"\n              variant=\"ghost\"\n              onClick={handleNavigateProfile}\n            >\n              <Text color=\"white\" mr=\"1rem\">\n                {name || \"Profile\"}\n              </Text>\n              <Avatar\n                size=\"xs\"\n                name=\"Dan Abrahmov\"\n                src=\"https://bit.ly/dan-abramov\"\n              />\n            </Button>\n          </Flex>\n        </Route>\n      </Switch>\n    </Flex>\n  );\n};\n","export const getPosts = async () => {\n  const response = await window.fetch(\"https://gorest.co.in/public-api/posts\");\n\n  if (!response.ok) {\n    throw new Error(\"Estamos teniendo problemas en el servidor, intenta luego\");\n  } else {\n    return response.json();\n  }\n};\n","import React from \"react\";\nimport { Flex, Heading, Text, Spinner } from \"@chakra-ui/react\";\nimport { getPosts } from \"../api/posts\";\n\nexport const Home = () => {\n  const [state, setState] = React.useState({\n    loading: false,\n    posts: [],\n    error: null,\n  });\n\n  const { loading, posts, error } = state;\n\n  React.useEffect(() => {\n    const doFetchPosts = async () => {\n      setState({ loading: true, posts: [], error: null });\n\n      try {\n        const { data } = await getPosts();\n        setState({ loading: false, posts: data, error: null });\n      } catch (e) {\n        setState({ loading: false, posts: [], error: e.message });\n      }\n    };\n\n    doFetchPosts();\n  }, []);\n\n  // console.log('posts', posts)\n  if (loading) {\n    return (\n      <Flex align=\"center\" justify=\"center\" h=\"97vh\" w=\"100%\">\n        <Spinner size=\"xl\" />\n      </Flex>\n    );\n  } else if (error) {\n    <Text>{error}</Text>;\n  }\n  return (\n    <Flex direction=\"column\" p=\"3.5rem\">\n      <Heading as=\"h1\" mb=\"1.5rem\">\n        Mis Publicaciones\n      </Heading>\n      {posts.map((post) => (\n        <Flex\n          key={post.id}\n          m=\"0.5rem\"\n          border=\"3px solid #c2c2c2\"\n          direction=\"column\"\n          borderRadius=\"8px\"\n          p=\"1.5rem\"\n        >\n          <Heading as=\"h3\" size=\"lg\" mb=\"1rem\">\n            {post.title}\n          </Heading>\n          <Text>{post.body}</Text>\n        </Flex>\n      ))}\n    </Flex>\n  );\n};\n\n// siempre que queramos guardar información en un componente --> useState\n// null --> reincio al estado original\n","import React from \"react\";\nimport { Flex, Button, Text } from \"@chakra-ui/react\";\nimport { UserContext } from \"../context/user\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Profile = () => {\n  const history = useHistory();\n\n  const { user, setUser } = React.useContext(UserContext);\n  const name = user && `${user.firstName} ${user.lastName}`;\n\n  const handleSignOut = () => {\n    setUser(null);\n    history.push(\"/\");\n  };\n  return (\n    <Flex direction=\"column\">\n      <h1>Profile</h1>\n      <Text>{name}</Text>\n      <Button onClick={handleSignOut}>Sign Out</Button>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Flex, Button, Input, Heading, Text } from \"@chakra-ui/react\";\nimport { useAuth } from \"../hooks\";\n\nexport function SignUp() {\n  const [firstName, setFirsName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [errors, setErrors] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const history = useHistory();\n  const { signup } = useAuth();\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // evita que se renderize todos los componentes\n    setErrors([]);\n    setIsLoading(true);\n\n    //validacion en el caso que lo queramos dsp del submit, sino la validacion\n    //la hacemos en cada handle\n\n    // console.log(\"formulario completado\", firstName, lastName, email, password);\n\n    const user = {\n      firstName,\n      lastName,\n      email,\n      password,\n    };\n\n    signup(user)\n      .then(() => {\n        setErrors([]);\n        setIsLoading(false);\n\n        history.push(\"/signin\");\n      })\n      .catch((e) => {\n        setErrors(e);\n        setIsLoading(false);\n        console.log(\"errors\", e);\n      });\n  };\n\n  const handleFirstName = (e) => {\n    setFirsName(e.target.value);\n  };\n\n  const handleLastName = (e) => {\n    setLastName(e.target.value);\n  };\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  return (\n    <Flex\n      as=\"form\"\n      w=\"400px\"\n      h=\"520px\"\n      p=\"2rem\"\n      direction=\"column\"\n      backgroundColor=\"white\"\n      border=\"3px solid #000\"\n      borderRadius=\"8px\"\n      textAlign=\"center\"\n      onSubmit={handleSubmit}\n    >\n      <Text mb=\"2rem\" fontSize=\"1.3rem\" fontWeight=\"bold\" as=\"samp\">\n        Welcome to MyBlog App! 📓{\" \"}\n      </Text>\n      <Heading mb=\"2rem\">Sign Up</Heading>\n      <Input\n        border=\"2px solid \"\n        bg=\"white\"\n        onChange={handleFirstName}\n        mb=\"1rem\"\n        placeholder=\"First Name\"\n      />\n      <Input\n        border=\"2px solid \"\n        bg=\"white\"\n        onChange={handleLastName}\n        mb=\"1rem\"\n        placeholder=\"Last Name\"\n      />\n      <Input\n        border=\"2px solid \"\n        bg=\"white\"\n        onChange={handleEmail}\n        mb=\"1rem\"\n        placeholder=\"Email\"\n      />\n      <Input\n        border=\"2px solid \"\n        bg=\"white\"\n        onChange={handlePassword}\n        mb=\"1rem\"\n        placeholder=\"Password\"\n      />\n      {errors.map((error, i) => (\n        <Text key={i} color=\"red.500\">\n          {error}\n        </Text>\n      ))}\n      <Button\n        color=\"white\"\n        bg=\"black\"\n        colorScheme=\"white\"\n        mt=\"20px\"\n        type=\"submit\"\n        border=\"3px solid black\"\n        variant=\"ghost\"\n        disabled={isLoading}\n        isLoading={isLoading}\n      >\n        Sign up\n      </Button>\n      <Button\n        padding=\"2px\"\n        mt=\"1rem\"\n        color=\"black\"\n        colorScheme=\"teal\"\n        border=\"3px solid black\"\n        variant=\"ghost\"\n        onClick={() => {\n          history.push(\"/signin\");\n        }}\n      >\n        Already have an account? Sign In\n      </Button>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Flex, Button, Input, Heading, Text } from \"@chakra-ui/react\";\nimport { useAuth } from \"../hooks\";\nimport { UserContext } from \"../context/user\";\n\nexport function SignIn() {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [error, setError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { setUser } = React.useContext(UserContext);\n  const history = useHistory();\n  const { signin } = useAuth();\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // evita que se renderize todos los componentes\n    setError(null);\n    setIsLoading(true);\n\n    //validacion en el caso que lo queramos dsp del submit, sino la validacion\n    //la hacemos en cada handle\n\n    // console.log(\"formulario completado\", firstName, lastName, email, password);\n\n    signin(email, password)\n      .then((user) => {\n        setError(null);\n        setIsLoading(false);\n\n        setUser(user);\n        history.push(\"/\");\n      })\n      .catch((e) => {\n        setError(e);\n        setIsLoading(false);\n        // console.log(\"errors\", e);\n      });\n  };\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n  return (\n    <Flex\n      as=\"form\"\n      w=\"400px\"\n      p=\"2rem\"\n      direction=\"column\"\n      backgroundColor=\"white\"\n      border=\"2px solid #000\"\n      borderRadius=\"8px\"\n      textAlign=\"center\"\n      onSubmit={handleSubmit}\n    >\n      <Text>Welcome to your blog 📓 </Text>\n      <Heading mb=\"2rem\">Sign in</Heading>\n      <Input\n        border=\"2px solid\"\n        bg=\"white\"\n        mb=\"1rem\"\n        placeholder=\"Email\"\n        onChange={handleEmail}\n        isRequired\n      />\n      <Input\n        border=\"2px solid\"\n        bg=\"white\"\n        mb=\"1rem\"\n        placeholder=\"Password\"\n        onChange={handlePassword}\n        isRequired\n      />\n      {error ? <Text color=\"red.400\">{error}</Text> : null}\n      <Button\n        color=\"white\"\n        bg=\"black\"\n        colorScheme=\"white\"\n        mt=\"20px\"\n        type=\"submit\"\n        border=\"3px solid black\"\n        variant=\"ghost\"\n        disabled={isLoading}\n        isLoading={isLoading}\n      >\n        Sign In\n      </Button>\n      <Button\n        mt=\"1rem\"\n        color=\"black\"\n        colorScheme=\"teal\"\n        border=\"3px solid black\"\n        variant=\"ghost\"\n        onClick={() => {\n          history.push(\"/signup\");\n        }}\n      >\n        First time here? Sign Up\n      </Button>\n    </Flex>\n  );\n}\n","import { Flex, Text } from \"@chakra-ui/react\";\n\nexport const Footer = () => {\n  return (\n    <Flex\n      w=\"full\"\n      bg=\"black\"\n      direction=\"row\"\n      px=\"10rem\"\n      py=\"1.5rem\"\n      justify=\"center\"\n    >\n      <Text color=\"white\"> Gabriel Cerri 2021 © </Text>\n    </Flex>\n  );\n};\n","import { Flex } from \"@chakra-ui/react\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\n\nexport const Layout = ({ children }) => (\n  <Flex direction=\"column\" minH=\"100vh\">\n    <Header />\n    <Flex flex={1} justify=\"center\" align=\"center\" direction=\"column\">\n      {\" \"}\n      {children}\n    </Flex>\n    <Footer />\n  </Flex>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport \"./styles/global.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// el provider siempre va a tener una prop value, y es esa value la que vamos a estar distribuyendo globalmente\n"],"sourceRoot":""}